name: Main PR Validation

on:
  pull_request:
    branches: [main]

jobs:
  deployment-summary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog preview
        id: changelog-preview
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: main
          tag_prefix: v
          dry_run: true

      - name: Add changelog preview to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: release-changelog-preview
          message: |
            ## ðŸš€ Release Preview

            This release PR will create version **v${{ steps.changelog-preview.outputs.new_version }}** when merged to main.

            ### ðŸ“‹ Release Changelog

            ${{ steps.changelog-preview.outputs.changelog }}

            ### ðŸŽ¯ What happens when this PR is merged:

            1. **Version & Tagging:**
               - New version: `v${{ steps.changelog-preview.outputs.new_version }}`
               - Git tag will be created automatically
               - `package.json` version will be updated

            2. **Publishing:**
               - Package will be published to NPM with `latest` tag
               - GitHub Release will be created with full changelog
               - `CHANGELOG.md` will be updated

            3. **Branch Sync:**
               - Automatic PR will be created to sync `main` â†’ `develop`
               - Ensures develop branch stays up to date with release changes

            ### ðŸ“¦ Installation (after merge):
            ```bash
            npm install genius-intents@latest
            # or
            npm install genius-intents@${{ steps.changelog-preview.outputs.new_version }}
            ```

            ---

            *This preview is automatically generated from your commit history and will be the final release notes.*
