name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    #if: "contains(github.event.head_commit.message, 'release/') || contains(github.event.head_commit.message, 'chore: bump version to')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Run linting
        run: npm run lint:check

      - name: Run formatting check
        run: npm run format:check

      - name: Build package
        run: npm run build:clean

      - name: Extract version from package.json
        id: extract_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          PAT_TOKEN: ${{ secrets.GIT_PAT_TOKEN }}
          REPO_SLUG: ${{ github.repository }}
          VERSION: ${{ steps.extract_version.outputs.VERSION }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v$VERSION"
          git remote set-url origin "https://x-access-token:$PAT_TOKEN@github.com/$REPO_SLUG.git"
          git push origin "v$VERSION"

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.VERSION }}
          release_name: Release v${{ steps.extract_version.outputs.VERSION }}
          body: |
            ðŸš€ **Release v${{ steps.extract_version.outputs.VERSION }}**
            
            This is a stable release published to NPM with the `latest` tag.
            
            ## Installation
            ```bash
            npm install genius-intents@latest
            # or
            npm install genius-intents@${{ steps.extract_version.outputs.VERSION }}
            ```
            
            ## Changes
            Check the [CHANGELOG.md](https://github.com/Genius-Foundation/genius-intents/blob/main/CHANGELOG.md) for detailed release notes.
          draft: false
          prerelease: false

      - name: Create PR to sync main back to develop
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT_TOKEN }}
          script: |
            try {
              await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'develop'
              });
              
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Sync main to develop after release v${{ steps.extract_version.outputs.VERSION }}',
                head: 'main',
                base: 'develop',
                body: 'ðŸ”„ **Sync Release v${{ steps.extract_version.outputs.VERSION }} to Develop**\n\nThis PR syncs the release changes from `main` back to `develop` to keep both branches in sync.\n\n## Changes from Main\n- Version bump to v${{ steps.extract_version.outputs.VERSION }}\n- Release tag and any main-specific updates\n\n## Why This PR?\nAfter a release, `main` contains the tagged version but `develop` is behind. This sync ensures:\n- Future development starts from the correct version\n- No version conflicts in future releases\n- Clean GitFlow branch management\n\n## Next Steps\n1. Review and merge this PR to sync develop\n2. Continue development on develop branch from the new version\n\n---\n*This PR was automatically created by the release workflow.*'
              });
              
              console.log(`Created sync PR #${pr.data.number}: ${pr.data.html_url}`);
              
            } catch (error) {
              console.log('Error creating sync PR:', error.message);
            } 